{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAkC/B,SAASC,EAAcC,EAAKC,GAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACLN,EACFI,EAAQ,CAACN,MAAKC,QAEZM,EAAO,CAACP,MAAKC,O,GAEhBA,E,IAzCPN,EAAKC,KAAKa,iBAAiB,UAO3B,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOlB,EAAKC,KAAKkB,SAASC,MAAMC,OAC3CC,EAAYJ,OAAOlB,EAAKC,KAAKkB,SAASI,KAAKF,OAC3CG,EAASN,OAAOlB,EAAKC,KAAKkB,SAASK,OAAOH,OAEhD,GAAIG,GAAU,EAAG,OAEjB,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCrB,EAAcqB,EAAGR,GACdS,MAAK,SAAAC,G,IAAGtB,EAAGsB,EAAHtB,IAAKC,EAAGqB,EAAHrB,IACZR,EAAA8B,OAAOC,QAAQ,aAA4BC,OAAfzB,EAAI,aAAeyB,OAAJxB,EAAI,OAC/CyB,QAAQC,IAAI,aAA4BF,OAAfzB,EAAI,aAAeyB,OAAJxB,EAAI,M,IAE7C2B,OAAM,SAAAN,G,IAAGtB,EAAGsB,EAAHtB,IAAKC,EAAGqB,EAAHrB,IACbR,EAAA8B,OAAOM,QAAQ,YAA2BJ,OAAfzB,EAAI,aAAeyB,OAAJxB,EAAI,OAC9CyB,QAAQC,IAAI,YAA2BF,OAAfzB,EAAI,aAAeyB,OAAJxB,EAAI,M,IAG/CW,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onSubmit)\n\n\n\n\n\n//----------------------------------------------------------------------//\nfunction onSubmit(event) {\n  event.preventDefault();\n  let firstDelay = Number(refs.form.elements.delay.value);\n  const delayStep = Number(refs.form.elements.step.value);\n  const amount = Number(refs.form.elements.amount.value);\n   \n  if (amount <= 0) return;\n\n  for (let i = 1; i <= amount; i += 1) {    \n    createPromise(i, firstDelay)\n      .then(({ pos, del }) => {\n        Notify.success(`Fulfilled ${pos} promise ${del}ms`);\n        console.log(`Fulfilled ${pos} promise ${del}ms`);\n      })\n      .catch(({ pos, del }) => {\n        Notify.failure(`Rejected ${pos} promise ${del}ms`);\n        console.log(`Rejected ${pos} promise ${del}ms`);\n      });\n    \n    firstDelay += delayStep;\n  }\n}\n\n\nfunction createPromise(pos, del) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({pos, del});\n      } else {\n          reject({pos, del});\n        }\n    }, del);\n  });\n  \n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","pos","del","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","elements","delay","value","delayStep","step","amount","i","then","param","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.f9fd6a36.js.map"}